
name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Copy index.html to 404.html
        run: cp dist/index.html dist/404.html

      - name: Create correct index.html for GitHub Pages
        run: |
          # Find all JavaScript files in the dist/assets directory
          JS_FILES=$(find dist/assets -name "*.js" | grep -v "vendor" | sort)
          
          # Get the main entry JavaScript file (usually has "index" in the name)
          MAIN_JS=$(echo "$JS_FILES" | grep "index" | head -n 1 || echo "$JS_FILES" | head -n 1)
          
          if [ -n "$MAIN_JS" ]; then
            # Get just the filename part
            MAIN_JS_NAME=$(basename "$MAIN_JS")
            echo "Found main JS file: $MAIN_JS_NAME"
            
            # Update the script tags in both index.html and 404.html
            sed -i "s|src=\"/src/main.tsx\"|src=\"/assets/$MAIN_JS_NAME\"|g" dist/index.html
            sed -i "s|src=\"/src/main.tsx\"|src=\"/assets/$MAIN_JS_NAME\"|g" dist/404.html
            
            echo "Updated script paths in HTML files"
          else
            echo "Could not find main JS file!"
            exit 1
          fi

      - name: List build directory contents for debugging
        run: |
          echo "Contents of dist directory:"
          ls -la dist/
          echo "Contents of dist/assets directory:"
          ls -la dist/assets/ || echo "Assets directory not found"
          echo "Contents of index.html:"
          cat dist/index.html

      - name: Create CNAME file
        run: echo "www.thysgemaak.com" > dist/CNAME

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
